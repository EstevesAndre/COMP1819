/* Generated By:JJTree: Do not edit this line. ASTfield.java Version 6.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTfield extends SimpleNode {
  public String type;
  public String info;
  
  public ASTfield(int id) {
    super(id);
  }

  public ASTfield(jmm p, int id) {
    super(p, id);
  }

  public String toString() {
    return "field " + type + " " + info;
  }

  void triggerSemanticAnalysis() throws SemanticException
  { 
    if(type.equals("length"))
    {
      String type = checkSymbolTable(((ASTStatement) parent).id);
      if (type != null && !type.equals("int[]"))
      {
        throw new SemanticException("Invalid field access: Expecting int[], found " + type + " at line " + line + ", column " + column + ".");
      }
    }
  }
}
/* JavaCC - OriginalChecksum=b1ed2277fe6b22d7aef0ccc7a29e9dd9 (do not edit this line) */
